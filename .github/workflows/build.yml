name: Compile application binary

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-dev --no-progress

    - name: Set application environment to development
      run: echo "ENV=development" > .env

    - name: Generate version number
      run: |
        # get the YYYY-MM-DD date and the number of builds for the day + 1 (todo count only dev builds)
        TODAY_RELEASE_COUNT=$(git tag --list --sort=-creatordate --format='%(creatordate:short)' | grep -c $(date '+%F'))
        TODAY_RELEASE_COUNT=$((TODAY_RELEASE_COUNT + 1))
        DATE=$(date '+%F')
        VERSION="${DATE}-dev.${TODAY_RELEASE_COUNT}"
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        echo $VERSION > version

    - name: Build the standalone application binary
      run: php hyde app:build --build-version="${{ env.VERSION }}"

    - name: Calculate checksum
      run: |
        cd builds
        sha256sum hyde > checksum
        echo "SHA256 checksum of the application binary: $(cat checksum)"

    - name: Upload the application artifact
      uses: actions/upload-artifact@v3
      with:
        name: hyde
        path: builds/hyde

    - name: Upload the checksum artifact
      uses: actions/upload-artifact@v3
      with:
        name: checksum.txt
        path: builds/checksum

    - name: Upload the version number artifact
      uses: actions/upload-artifact@v3
      with:
        name: version
        path: version

  test:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Download the application artifact
      uses: actions/download-artifact@v3
      with:
        name: hyde

    - name: Make the application executable
      run: chmod +x hyde
      
    - name: Test that the application can run
      run: ./hyde

    - name: Test that the application version can be retrieved
      run: ./hyde --version


# TODO: If the build is for a release tag we attach it to that, otherwise we create a prerelease for it

  create-prerelease:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Download the application artifact
      uses: actions/download-artifact@v3
      with:
        name: hyde
        path: builds

    - name: Download the checksum artifact
      uses: actions/download-artifact@v3
      with:
        name: checksum.txt
        path: builds

    - name: Download the version number artifact
      uses: actions/download-artifact@v3
      with:
        name: version

    - name: Get version information
      run: |
        echo "CHECKSUM=$(cat builds/checksum | cut -d ' ' -f 1)" >> $GITHUB_ENV
        echo "CHECKSUM=$(cat builds/checksum | cut -d ' ' -f 1)"
        echo "VERSION=$(cat version)" >> $GITHUB_ENV
        echo "VERSION=$(cat version)"

    - name: Create a prerelease
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.RELEASE_TOKEN }}
        name: ${{ env.VERSION }}
        tag: ${{ env.VERSION }}
        artifacts: builds/hyde, builds/checksum
        body: |
          ## Experimental development build
          
          This is an automated experimental development build of the application.
          It is not guaranteed to be stable and may not work at all.
          
          ### Checksum

          SHA256 checksum of the application binary:
          ```
          ${{ env.CHECKSUM }}
          ```

        prerelease: true
